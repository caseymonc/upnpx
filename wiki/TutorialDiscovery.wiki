#labels upnp,tutorial,Discovery
#sidebar TutorialIndex

== 1. Discovery ==

During Discovery we will search for any UPnP device on the local network. upnpx implements the ssdp protocol (Simple Device Discovery Protocol) and maintains an in memory database of all devices on the network, it  will automatically update this database when new devices are added or removed.
Your code can read the database and get notifications when an update is done.

In code (see : project upnpxdemo)


1. Implement the Interface *UPnPDBObserver*: 
{{{
//  RootViewController.h

#import "UPnPDB.h"

@interface RootViewController : UITableViewController <UPnPDBObserver>{
	NSArray *mDevices; //BasicUPnPDevice*
}


//protocol UPnPDBObserver
-(void)UPnPDBWillUpdate:(UPnPDB*)sender;
-(void)UPnPDBUpdated:(UPnPDB*)sender;
}}}


2. Get a pointer to the discovery database via the UPnPManager and call SSDP Search: 
{{{
//  RootViewController.m

- (void)viewDidLoad {
    [super viewDidLoad];

    // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
    // self.navigationItem.rightBarButtonItem = self.editButtonItem;

    UPnPDB* db = [[UPnPManager GetInstance] DB];
    
    mDevices = [db rootDevices]; //BasicUPnPDevice
	[mDevices retain];

    [db addObserver:(UPnPDBObserver*)self];
    
    [[[UPnPManager GetInstance] SSDP] searchSSDP]; 	
    
    self.title = @"upnpx demo";
}
}}}

3. Implement the UPnPDBObserver callback functions: 
{{{
//protocol UPnPDBObserver
-(void)UPnPDBWillUpdate:(UPnPDB*)sender{
    NSLog(@"UPnPDBWillUpdate %d", [mDevices count]);
}

-(void)UPnPDBUpdated:(UPnPDB*)sender{
    NSLog(@"UPnPDBUpdated %d", [mDevices count]);
}
}}}


Next [TutorialDescription Step 2. Description]