#labels upnp,tutorial,Discovery
#sidebar TutorialIndex

== 1. Discovery ==

 _{UPnP specifications: "Through discovery, control points find interesting device(s)."}_

During Discovery we will search for any UPnP device on the local network. upnpx implements the SSDP protocol (Simple Service Discovery Protocol) and maintains an in-memory database of all devices on the network, it  will automatically update this database when new devices are added or removed.
Your code can read the database and get notifications when an update is done.

Check the project [http://code.google.com/p/upnpx/source/browse/#svn%2Ftrunk%2Fprojects%2Fiphone-xcode_3.n%2Fupnpxdemo ./upnpx/projects/iphone-xcode_3.n/upnpxdemo/upnpxdemo.xcodeproj] to see an example of a functional ssdp implementation:

http://upnpx.googlecode.com/svn/wiki/images/ssdpscreen.png

Basically, there are 3 steps to complete to implement SSDP:

1. Implement the Interface [http://code.google.com/p/upnpx/source/browse/trunk/src/api/UPnPDB.h UPnPDBObserver]: 
{{{
//  RootViewController.h

#import "UPnPDB.h"

@interface RootViewController : UITableViewController <UPnPDBObserver>{
	NSArray *mDevices; //BasicUPnPDevice*
}


//protocol UPnPDBObserver
-(void)UPnPDBWillUpdate:(UPnPDB*)sender;
-(void)UPnPDBUpdated:(UPnPDB*)sender;
}}}


2. Get a pointer to the discovery database via the [http://code.google.com/p/upnpx/source/browse/trunk/src/api/UPnPManager.h UPnPManager], register yourself as an observer and tell the SSDP implementation to search for devices by calling  [http://code.google.com/p/upnpx/source/browse/trunk/src/api/SSDPDB_ObjC.h searchSSDP]: 
{{{
//  RootViewController.m

- (void)viewDidLoad {
    [super viewDidLoad];

    // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
    // self.navigationItem.rightBarButtonItem = self.editButtonItem;

    UPnPDB* db = [[UPnPManager GetInstance] DB];
    
    mDevices = [db rootDevices]; //BasicUPnPDevice
    [mDevices retain];

    [db addObserver:(UPnPDBObserver*)self];
    
    [[[UPnPManager GetInstance] SSDP] searchSSDP]; 	
    
    self.title = @"upnpx demo";
}
}}}

3. Implement the [http://code.google.com/p/upnpx/source/browse/trunk/src/api/UPnPDB.h UPnPDBObserver] callback functions: 
{{{
//protocol UPnPDBObserver
-(void)UPnPDBWillUpdate:(UPnPDB*)sender{
    NSLog(@"UPnPDBWillUpdate %d", [mDevices count]);
}

-(void)UPnPDBUpdated:(UPnPDB*)sender{
    NSLog(@"UPnPDBUpdated %d", [mDevices count]);
}
}}}


The above code is all what is needed to search for UPnP devices on the Local Network. The NSArray mDevices contains a [http://code.google.com/p/upnpx/source/browse/trunk/src/api/BasicUPnPDevice.h BasicUPnPDevice] Instance per found device. The upnpx stack will automatically keep track of any changes (device add, remove, update) and the UPnPDBUpdated functions will be called whenever such changes are discovered. 

There is little extra coding to be done in order to fill in an UITableView to display the found UPnP devices on the iPhone UI. 

Check the [http://code.google.com/p/upnpx/source/browse/#svn%2Ftrunk%2Fprojects%2Fiphone-xcode_3.n%2Fupnpxdemo upnpxdemo] project for the full implementation. 

<br><br>

Next [TutorialDescription Step 2. Description]