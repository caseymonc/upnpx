#labels upnp,tutorial,eventing
#sidebar TutorialIndex

== 4. Eventing ==

 _{UPnP specifications: "Through eventing, control points listen to state changes in device(s)."}_


1. Implement the Interface : BasicUPnPServiceObserver, declared in  [http://code.google.com/p/upnpx/source/browse/trunk/src/api/BasicUPnPService.h BasicUPnPService.h] 
{{{
@protocol BasicUPnPServiceObserver
-(void)UPnPEvent:(BasicUPnPService*)sender events:(NSDictionary*)events;
@end
}}}

<br><br>

2. Register your Class as an Observer (be sure to do this only once)
{{{
if([[self avTransportService] isObserver:(BasicUPnPServiceObserver*)self] == NO){
	[[self avTransportService] addObserver:(BasicUPnPServiceObserver*)self]; //Lazy observer attach
}
}}}

<br><br>

3. Receive the events

[http://www.upnp.org/specs/av/UPnP-av-AVTransport-v1-Service.pdf UPnP-av-AVTransport-v1-Service.pdf] 
{{{
//BasicUPnPServiceObserver
-(void)UPnPEvent:(BasicUPnPService*)sender events:(NSDictionary*)events{
	if(sender == [self avTransportService]){
		NSString *newState = [events objectForKey:@"TransportState"];
	
		if([newState isEqualToString:@"STOPPED"]){
                    //Do your stuff, play next song etc...
		}
	}
}

}}}

<br><br>
Next [TutorialPresentation Step 5. Presentation]