#labels upnp,tutorial,description
#sidebar TutorialIndex

==  Description ==

From the Specifications: _"For the control point to learn more about the device and its capabilities, or to interact with the device, the control point MUST retrieve a *description* of the device and its capabilities from the URL provided by the device in the discovery message."_

*upnpx* does the description step in the background so that integrators do not have to deal with it. 
The [http://code.google.com/p/upnpx/source/browse/trunk/src/api/BasicUPnPDevice.h BasicUPnPDevice] pointers we get from the [http://code.google.com/p/upnpx/source/browse/trunk/src/api/UPnPDB.h UPnPDB] during the [http://code.google.com/p/upnpx/wiki/TutorialDiscovery discovery] already contains the device description and capabilities. upnpx did the necessary HTTP requests and parsed the Device and Service Description XML's for all 'known' Devices found during the SSDP Discovery. 

Check the Factory [http://code.google.com/p/upnpx/source/browse/trunk/src/upnp/DeviceFactory.m DeviceFactory.m] for a list of current supported devices. This list can quite easily be extended with the help of an automated code generator which takes scdp XML from the standard descriptions as input.

Since the UPnPDB only returns the device base class [http://code.google.com/p/upnpx/source/browse/trunk/src/api/BasicUPnPDevice.h BasicUPnPDevice] you need to implement a little logic to get access to the higher level device classes, the trick is to check the type and to cast the base class. See the following sample:

{{{
//We are interested in MediaServer1Devices
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {

    BasicUPnPDevice *device = [mDevices objectAtIndex:indexPath.row];
    if([[device urn] isEqualToString:@"urn:schemas-upnp-org:device:MediaServer:1"]){
        MediaServer1Device *server = (MediaServer1Device*)device;
        //We are ready to call control-methods on the server
    }
	
}
}}}

This step is in fact quite easy, all you have to know it that upnpx give you instances of Devices in the form of [http://code.google.com/p/upnpx/source/browse/trunk/src/api/BasicUPnPDevice.h BasicUPnPDevice] base classes and that you need to cast them to the actual device class in order to be ready for the next step. 

Next [TutorialControl Step 3. Control ]